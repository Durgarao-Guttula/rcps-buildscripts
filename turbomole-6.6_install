#!/usr/bin/env bash

set -o errexit -o nounset
for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

package_name="turbomole"
package_version="6.6"
# Optional: 
#package_variant="impi"

actual_file_name=turbomole-6.6.tar.gz
actual_file_md5=6ec1b8555f567a7ea88dc54805c59e9f
stored_file_location=/shared/ucl/apps/$package_name/sources


# No module requirements: shipped as binary

_env_setup() {
  owd=$(pwd)
  package_label="${package_name}/${package_version}${package_variant:+-${package_variant}}"
  install_prefix=${INSTALL_PREFIX:-/shared/ucl/apps/$package_label}
  build_dir=${BUILD_DIR:-$(mktemp -d -t ${package_name}-build.XXXXXXXX)}
  module_dir=${MODULE_DIR:-$(mktemp -d -t ${package_name}-modules.XXXXXXXX)}
  basename=turbomole-6.6
  cd $build_dir
}

_fetch_files() {
  cd $stored_file_location/
  md5sum -c <<<"$actual_file_md5  $actual_file_name"
}

_setup_files() {
  :
}

_install() {
  # Ships as binaries
  mkdir -p $install_prefix
  cd $install_prefix
  tar --strip-components=1 -xf $stored_file_location/$actual_file_name
  echo "Installed to: $install_prefix"
}

_prepare_module() {
  mkdir -p $module_dir/$package_label
  make_module -p $install_prefix \
              -n "${package_name}" \
              -c "${package_name}" \
              -o $module_dir/$package_label/mpi \
              -r compilers/intel/2015/update2 \
              -r mpi/intel/2015/update3/intel \
              -v PARA_ARCH=MPI \
              -v TURBODIR=\$prefix \
              -e PATH:\$prefix/scripts \
              -e PATH:\$prefix/bin/em64t-unknown-linux-gnu_mpi \
              -e PATH:\$prefix \
              -v TURBOMOLE_SYSNAME=em64t-unknown-linux-gnu_mpi \
              -w "Adds ${package_name} ${package_version} (using MPI) to your environment."

  make_module -p $install_prefix \
              -n "${package_name}" \
              -c "${package_name}" \
              -o $module_dir/$package_label/smp \
              -r compilers/intel/2015/update2 \
              -r mpi/intel/2015/update3/intel \
              -v PARA_ARCH=SMP \
              -v TURBODIR=\$prefix \
              -e PATH:\$prefix/scripts \
              -e PATH:\$prefix/bin/em64t-unknown-linux-gnu_smp \
              -e PATH:\$prefix \
              -v TURBOMOLE_SYSNAME=em64t-unknown-linux-gnu_smp \
              -w "Adds ${package_name} ${package_version} (using SMP) to your environment."
  # ^- Yes, the SMP version still needs MPI (AFAIA) because it uses Global Arrays. Cue eyerolling.

  make_module -p $install_prefix \
              -n "${package_name}" \
              -c "${package_name}" \
              -o $module_dir/$package_label/serial \
              -r compilers/intel/2015/update2 \
              -v TURBODIR=\$prefix \
              -e PATH:\$prefix/scripts \
              -e PATH:\$prefix/bin/em64t-unknown-linux-gnu \
              -e PATH:\$prefix \
              -v TURBOMOLE_SYSNAME=em64t-unknown-linux-gnu \
              -w "Adds ${package_name} ${package_version} (serial) to your environment."

  echo "Module files put in: $module_dir" >&2
  chmod a+rx $module_dir
}

_clean_up() {
  cd $owd
  if [ -n "$build_dir" ]; then
    rm -Rf ${build_dir}
  fi
}

_env_setup
_fetch_files
_setup_files
_install
_prepare_module
_clean_up

