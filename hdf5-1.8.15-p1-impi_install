#!/usr/bin/env bash

# libhdf5, mpi-enabled, required for MPB and Meep

PACKAGE_NAME="hdf5"
PACKAGE_VERSION="1.8.15-patch1"


set -e

dirname=$(dirname $0 2>/dev/null)
INCLUDES_DIR=${INCLUDES_DIR:-${dirname}/includes}
source ${INCLUDES_DIR}/module_maker_inc.sh
source ${INCLUDES_DIR}/require_inc.sh

require compilers/intel/2015/update2
require mpi/intel/2015/update3/intel

_env_setup() {
  OWD=$(pwd)
  INSTALLATION_PREFIX=${INSTALLATION_PREFIX:-/shared/ucl/apps/${PACKAGE_NAME}/${PACKAGE_VERSION/atch/}-impi/${COMPILER_TAG}}
  MODULE_STAGE=$(mktemp -d /tmp/module_stage.XXXXXXXXXX)
  BUILD_DIR=$(mktemp -d)
  SRC_URLS=https://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-${PACKAGE_VERSION}.tar.gz
  BASENAME=$(basename -s .tar.gz $(cut -f 1 -d ' ' <<<$SRC_URLS))
}

_fetch_files() {
  cd $BUILD_DIR
  wget $SRC_URLS
  md5sum -c <<<"4467c25ed9c0b126b194a4d9d66c29ac  hdf5-1.8.15-patch1.tar.gz"
  cd $OWD
}

_setup_files() {
  cd $BUILD_DIR
  tar -xf ${BASENAME}.tar.gz
  cd $OWD
}


_build() {
  cd $BUILD_DIR
  cd ${BASENAME}
  CC=mpicc FC=mpif90 ./configure --prefix=$INSTALLATION_PREFIX --enable-parallel --enable-fortran --enable-fortran2003
  # ^-- enable-threadsafe is mutually exclusive with both enable-fortran and enable-cxx
  # if you want C++ support and Fortran support, remove the threadsafety arg and v/v
  # enable-fortran2003 is also dependent on enable-fortran
  # enable-cxx is also mutually exclusive with enable-parallel, *sigh*
  make
  make check-s
  cd $OWD
}

_install() {
  cd $BUILD_DIR
  cd $BASENAME
  make install
  cd $OWD
  make_module -p $INSTALLATION_PREFIX \
              -n "${PACKAGE_NAME}" \
              -c "${PACKAGE_NAME}" \
              -r "compilers/intel/2015/update2" \
              -r "mpi/intel/2015/update3/intel" \
              -o $MODULE_STAGE/${PACKAGE_NAME}/${PACKAGE_VERSION}-impi/${COMPILER_TAG} \
              -w "Adds hdf5 1.8.5-p1 (built using Intel compilers with Fortran and MPI capabilities) to your environment."
  echo "Module files put in: $MODULE_STAGE" >&2
}

_clean_up() {
  if [ -n "$BUILD_DIR" ]; then
    rm -Rf ${BUILD_DIR}
  fi
}

_env_setup
_fetch_files
_setup_files
_build
_install
_clean_up


