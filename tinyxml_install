#!/usr/bin/env bash
_env_setup() {
  package_name="tinyxml"
  PACKAGE_NAME="TINYXML"
  version="2.6.2"
  filename="${package_name}_2_6_2.tar.gz"
  directory=$package_name
  source_location="https://downloads.sourceforge.net/project/tinyxml/tinyxml/$version/$filename"
  patches=(
    "https://raw.githubusercontent.com/robotology/yarp/master/extern/tinyxml/patches/enforce-use-stl.patch"
    "https://raw.githubusercontent.com/robotology/yarp/master/extern/tinyxml/patches/entity-encoding.patch"
    "https://gist.githubusercontent.com/scpeters/6325123/raw/cfb079be67997cb19a1aee60449714a1dedefed5/tinyxml_CMakeLists.patch"
  )
  plevels=(1 0 1)
  compiler=${1:-intel}
  modulefiles=${modulefiles:-~ccsprsd/modulefiles}

  module swap compilers compilers/$compiler
  INSTALL_PREFIX=${DESTDIR-/imports/home0/ccsprsd/modules/$package_name/$compiler}
}

_download() {
  cd $temp_dir
  wget $source_location
  tar -xvf $filename
  cd $temp_dir

  for (( i=0; i<${#patches[@]}; i++ )); do
    cd $temp_dir && wget ${patches[$i]} -O patch-$i
    cd $temp_dir/$directory && patch -p ${plevels[$i]} < $temp_dir/patch-$i
  done
}

_configure() {
  mkdir -p $temp_dir/$directory/build/$compiler
  cd $temp_dir/$directory/build/$compiler
  cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        $temp_dir/$directory
}

_make() {
  cd $temp_dir/$directory/build/$compiler
  make -j8
}

_install() {
  cd $temp_dir/$directory/build/$compiler
  make install
}

_modulefile() {
  mkdir -p $modulefiles/$package_name
  cat > $modulefiles/$package_name/$compiler <<EOF
#%Module -*- tcl -*-
##
## dot modulefile
##
proc ModulesHelp { } {
  puts stderr "\tAdds $package_name"
}

module-whatis "Adds $package_name to your environment"

set              root              $INSTALL_PREFIX

conflict cppunit
prereq compilers/$compiler

append-path      LD_RUN_PATH       \$root/lib/
append-path      LD_LIBRARY_PATH   \$root/lib/
append-path      CMAKE_PREFIX_PATH \$root/

setenv           ${PACKAGE_NAME}_LIBRARY_DIR  \$root/lib
setenv           ${PACKAGE_NAME}_INCLUDE_DIR  \$root/include
EOF
}

# loads modules
source /shared/ucl/apps/bin/defmods
# Creates a temporary directory
temp_dir=`mktemp -d -p /dev/shm`

_env_setup gnu
_download

for compiler in "gnu" "intel"; do
  _env_setup $compiler
  _configure
  _make
  _install
  _modulefile
done
